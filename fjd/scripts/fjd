#!/usr/bin/python

import argparse
from fjd import Recruiter, Dispatcher
from fjd.utils import ensure_wdir


if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Use FJDStart a worker process.')
    parser.add_argument('--exe', type=str, help="path to executable script") 
    parser.add_argument('--instances', type=int, default=1, 
                        help="Number of instances to start. Default is one "\
                             "You can also list hosts in remote.conf.")
    parser.add_argument('--parameters', type=int,
                        help="List of parameters to send to executable. A comma-"\
                             "separated list. Enclose sub-lists like this: 'a,b','c,d'.") 
    parser.add_argument('--project', type=str, help="Custom identifier (useful"\
                                  when FJD is used to run several projects).")
    parser.add_argument('--curdir', type=str, help="Current directory workers should cd into before starting.")

    args = parser.parse_args()

    # TODO: check if instances or parameters is there. Only one is allowed.
    
    # TODO: translate whatever they say into job files.
    self.wdir = ensure_wdir(args.project)
    # TODO: recruite and dispatch.
    recruiter = Recruiter(num_workers=args.num_workers, project=args.project,
                              local_only=args.local_only, curdir=args.curdir)
    recruiter.hire()
    Dispatcher(project=args.project, interval=args.interval,
               end_when_jobs_are_done=args.end_when_jobs_are_done,
               status_only=args.status_only)

